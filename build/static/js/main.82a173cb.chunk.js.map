{"version":3,"sources":["components/customprimitives.tsx","components/skillsform.tsx","components/workExForm.tsx","components/profileform.tsx","components/dashboard.tsx","App.tsx","index.tsx"],"names":["CInput","props","useField","field","meta","id","label","type","touched","error","className","CTextArea","CSelect","placeholder","children","SkillsForm","skill","handleChange","index","removeFn","p","marginBottom","border","flex","name","SkillsArr","values","arrayHelpers","colorScheme","variant","onClick","push","level","map","remove","React","memo","months","WorkExForm","workEx","textAlign","company","toYear","pb","spacing","align","w","bg","m","i","value","WorkExArr","fromYear","role","DisplayFormikState","style","margin","fontFamily","background","fontSize","padding","JSON","stringify","ProfileForm","allowToggle","allowMultiple","initialValues","about","workExperience","fromMonth","toMonth","jobdescription","skills","onSubmit","actions","console","log","handleBlur","handleSubmit","mb","as","size","isTruncated","onChange","py","Dashboard","useDisclosure","isOpen","onOpen","onClose","useState","placement","maxW","h","borderBottomWidth","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAkBaA,EAAS,SAACC,GAAiD,IAAD,EACtCC,YAASD,GAD6B,mBAC9DE,EAD8D,KACvDC,EADuD,UAErE,OACE,qCACE,eAAC,IAAD,CAAaC,GAAG,WAAhB,UACE,cAAC,IAAD,UAAYJ,EAAMK,QAClB,cAAC,IAAD,2BAAWH,GAAX,IAAkBI,KAAMN,EAAMM,WAE/BH,EAAKI,SAAWJ,EAAKK,MACpB,qBAAKC,UAAU,QAAf,SAAwBN,EAAKK,QAC3B,SAKGE,EAAY,SAACV,GAAiD,IAAD,EACzCC,YAASD,GADgC,mBACjEE,EADiE,KAC1DC,EAD0D,UAExE,OACE,qCACE,eAAC,IAAD,CAAaC,GAAG,WAAhB,UACE,cAAC,IAAD,UAAYJ,EAAMK,QAClB,cAAC,IAAD,2BAAcH,GAAd,IAAqBI,KAAMN,EAAMM,WAElCH,EAAKI,SAAWJ,EAAKK,MACpB,qBAAKC,UAAU,QAAf,SAAwBN,EAAKK,QAC3B,SAKGG,EAAU,SAACX,GAAiD,IAAD,EACvCC,YAASD,GAD8B,mBAC/DE,EAD+D,KACxDC,EADwD,UAEtE,OACE,qCACE,eAAC,IAAD,CAAaC,GAAG,WAAhB,UACE,cAAC,IAAD,UAAYJ,EAAMK,QAElB,cAAC,IAAD,yBAAQO,YAAY,iBAAoBV,GAAxC,IAA+CI,KAAMN,EAAMM,KAA3D,SACGN,EAAMa,eAGVV,EAAKI,SAAWJ,EAAKK,MACpB,qBAAKC,UAAU,QAAf,SAAwBN,EAAKK,QAC3B,SCjDJM,EAKD,SAAC,GAA6C,EAA3CC,MAA2C,EAApCC,aAAqC,IAAvBC,EAAsB,EAAtBA,MAAsB,EAAfC,SAClC,OACE,cAAC,IAAD,CAAMC,EAAE,IAAIC,aAAa,IAAIC,OAAO,iBAApC,SACE,eAAC,IAAD,CAAKC,KAAK,IAAV,UACE,cAAC,EAAD,CACEC,KAAI,iBAAYN,EAAZ,UACJX,KAAK,OACLM,YAAY,aACZP,MAAM,UAER,cAAC,EAAD,CACEkB,KAAI,iBAAYN,EAAZ,UACJX,KAAK,OACLM,YAAY,QACZP,MAAM,gBAMVmB,EAAmC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQT,EAAmB,EAAnBA,aAClD,OACE,cAAC,IAAD,CAAYO,KAAK,SAAjB,SACG,SAACG,GACA,OACE,gCACE,cAAC,IAAD,CACEpB,KAAK,SACLqB,YAAY,OACZC,QAAQ,QACRC,QAAS,kBACPH,EAAaI,KAAK,CAChBf,MAAO,GACPgB,MAAO,KAPb,yBAcCN,EAAOO,KAAI,SAACjB,EAAOE,GAAR,OACV,cAAC,EAAD,CAEEF,MAAOA,EACPC,aAAcA,EACdC,MAAOA,EACPC,SAAUQ,EAAaO,QAJlBhB,aAcNiB,MAAMC,KAAKX,GChDpBY,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEIC,EAKD,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAsBrB,GAAsB,EAApCD,aAAoC,EAAtBC,OAAOC,EAAe,EAAfA,SACnC,OACE,mCACE,eAAC,IAAD,WACE,6BACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKI,KAAK,IAAIiB,UAAU,OAAxB,UACGD,EAAOE,QADV,MACsBF,EAAOG,UAE7B,cAAC,IAAD,SAGJ,cAAC,IAAD,CAAgBC,GAAI,EAApB,SACE,eAAC,IAAD,CAAMvB,EAAE,IAAIC,aAAa,IAAIC,OAAO,iBAApC,UACE,eAAC,IAAD,CAAKC,KAAK,IAAV,UACE,cAAC,EAAD,CACEC,KAAI,yBAAoBN,EAApB,YACJX,KAAK,OACLM,YAAY,WACZP,MAAM,YAER,cAAC,EAAD,CACEkB,KAAI,yBAAoBN,EAApB,SACJX,KAAK,OACLM,YAAY,OACZP,MAAM,SAGR,eAAC,IAAD,CAAQsC,QAAQ,OAAhB,UACE,gCACE,cAAC,IAAD,mBACA,eAAC,IAAD,CAAQA,QAAQ,OAAOC,MAAM,UAA7B,UACE,eAAC,IAAD,CAAKC,EAAE,MAAMC,GAAG,GAAhB,UACE,cAAC,IAAD,oBACA,cAAC,EAAD,CACEvB,KAAI,yBAAoBN,EAApB,cACJX,KAAK,SACLD,MAAM,GAHR,SAKG+B,EAAOJ,KAAI,SAACe,EAAGC,GAAJ,OACV,wBAAgBC,MAAOF,EAAvB,SACGA,GADUC,WAMnB,cAAC,IAAD,CAAKH,EAAE,MAAMC,GAAG,GAAhB,SACE,cAAC,EAAD,CACEvB,KAAI,yBAAoBN,EAApB,aACJX,KAAK,OACLM,YAAY,OACZP,MAAM,iBAKd,gCACE,cAAC,IAAD,iBACA,eAAC,IAAD,CAAQsC,QAAQ,OAAOC,MAAM,UAA7B,UACE,eAAC,IAAD,CAAKC,EAAE,MAAMC,GAAG,GAAhB,UACE,cAAC,IAAD,oBACA,cAAC,EAAD,CACEvB,KAAI,yBAAoBN,EAApB,YACJX,KAAK,SACLD,MAAM,GAHR,SAKG+B,EAAOJ,KAAI,SAACe,EAAGC,GAAJ,OACV,wBAAgBC,MAAOF,EAAvB,SACGA,GADUC,WAMnB,cAAC,IAAD,CAAKH,EAAE,MAAMC,GAAG,GAAhB,SACE,cAAC,EAAD,CACEvB,KAAI,yBAAoBN,EAApB,WACJX,KAAK,OACLM,YAAY,OACZP,MAAM,oBAMhB,cAAC,EAAD,CACEkB,KAAI,yBAAoBN,EAApB,mBACJX,KAAK,OACLM,YAAY,cACZP,MAAM,kBAGV,wBAAQwB,QAAS,kBAAMX,EAASD,IAAhC,0BAQNiC,EAAmC,SAAC,GAA8B,IAA5BzB,EAA2B,EAA3BA,OAAQT,EAAmB,EAAnBA,aAClD,OACE,cAAC,IAAD,CAAYO,KAAK,iBAAjB,SACG,SAACG,GAAD,OACC,gCACE,cAAC,IAAD,CACEpB,KAAK,SACLqB,YAAY,OACZC,QAAQ,QACRC,QAAS,kBACPH,EAAaI,KAAK,CAChBU,QAAS,GACTW,SAAU,GACVV,OAAQ,GACRW,KAAM,MATZ,yBAeC3B,EAAOO,KAAI,SAACM,EAAQrB,GAAT,OACV,cAAC,EAAD,CAEEqB,OAAQA,EACRtB,aAAcA,EACdC,MAAOA,EACPC,SAAUQ,EAAaO,QAJlBhB,aAaJiB,MAAMC,KAAKe,GC9JpBG,EAAqB,SAACrD,GAAD,OACzB,sBAAKsD,MAAO,CAAEC,OAAQ,UAAtB,UACE,oBAAID,MAAO,CAAEE,WAAY,eACzB,sBACEF,MAAO,CACLG,WAAY,UACZC,SAAU,SACVC,QAAS,SAJb,UAOE,2CAPF,MAO4BC,KAAKC,UAAU7D,EAAO,KAAM,UAKtD8D,EAAwB,WAC5B,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,aAAW,EAACC,eAAa,EAApC,SACE,cAAC,IAAD,CACEC,cAAe,CACb1C,KAAM,OACN2C,MAAO,GACPC,eAAgB,CACd,CACE3B,QAAS,MACT4B,UAAW,GACXjB,SAAU,KACVkB,QAAS,GACT5B,OAAQ,KACRW,KAAM,MACNkB,eAAgB,KAGpBC,OAAQ,CACN,CACEhD,KAAM,aACNQ,MAAO,KAIbyC,SAAU,SAAC/C,EAAQgD,GAAT,OAAqBC,QAAQC,IAAIlD,IAtB7C,SAwBG,gBAAGA,EAAH,EAAGA,OAAQT,EAAX,EAAWA,aAAX,EAAyB4D,WAAzB,EAAqCC,aAArC,OACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,eAAC,IAAD,CAAezD,OAAO,OAAtB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAK,IAAIiB,UAAU,OAAxB,SACE,cAAC,IAAD,CAASwC,GAAG,KAAKC,KAAK,KAAKC,aAAW,EAAtC,qBAIF,cAAC,IAAD,OAEF,eAAC,IAAD,CAAgBvC,GAAI,EAApB,UACE,eAAC,IAAD,CAAatC,GAAG,WAAhB,UACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEE,KAAK,OACLiB,KAAK,OACL0B,MAAOxB,EAAOF,KACd2D,SAAUlE,IAEZ,cAAC,IAAD,+CAKF,eAAC,IAAD,CAAaZ,GAAG,QAAhB,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,CACEQ,YAAY,+BACZW,KAAK,QACL0B,MAAOxB,EAAOyC,MACdgB,SAAUlE,IAGZ,cAAC,IAAD,uDASR,cAAC,IAAD,CAAK8D,GAAG,KAAR,SACE,eAAC,IAAD,CAAezD,OAAO,OAAtB,UACE,6BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAK,IAAIiB,UAAU,OAAxB,SACE,cAAC,IAAD,CAASwC,GAAG,KAAKC,KAAK,KAAKC,aAAW,EAAtC,+BAIF,cAAC,IAAD,SAGJ,eAAC,IAAD,CAAgBvC,GAAI,EAApB,UACE,cAAC,IAAD,CAASsC,KAAK,KAAd,6BACA,cAAC,IAAD,CAAWjB,aAAW,EAAtB,SACE,cAAC,EAAD,CACEtC,OAAQA,EAAO0C,eACfnD,aAAcA,cAOxB,cAAC,IAAD,CAAK8D,GAAG,KAAR,SACE,eAAC,IAAD,CAAezD,OAAO,OAAtB,UACE,6BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAK,IAAIiB,UAAU,OAAxB,SACE,cAAC,IAAD,CAASwC,GAAG,KAAKC,KAAK,KAAKC,aAAW,EAAtC,sBAIF,cAAC,IAAD,SAGJ,eAAC,IAAD,CAAgBE,GAAI,EAApB,UACE,cAAC,IAAD,CAASH,KAAK,KAAd,6BACA,cAAC,IAAD,CAAWjB,aAAW,EAAtB,SACE,cAAC,EAAD,CACEtC,OAAQA,EAAO8C,OACfvD,aAAcA,cAOxB,cAAC,IAAD,CAAK8D,GAAG,KAAR,SACE,eAAC,IAAD,CAAezD,OAAO,OAAtB,UACE,6BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAK,IAAIiB,UAAU,OAAxB,SACE,cAAC,IAAD,CAASwC,GAAG,KAAKC,KAAK,KAAKC,aAAW,EAAtC,uBAIF,cAAC,IAAD,SAGJ,eAAC,IAAD,CAAgBvC,GAAI,EAApB,UACE,cAAC,IAAD,CAASsC,KAAK,KAAd,6BACA,cAAC,IAAD,CAAWjB,aAAW,EAAtB,SACE,cAAC,EAAD,CACEtC,OAAQA,EAAO0C,eACfnD,aAAcA,cAOxB,cAAC,EAAD,CAAoBS,OAAQA,eAS3BS,MAAMC,KAAK2B,GC9IXsB,MA5Bf,WAAsB,IAAD,EACiBC,cAA5BC,EADW,EACXA,OAAQC,EADG,EACHA,OAAQC,EADL,EACKA,QADL,EAEeC,mBAAyB,QAFxC,mBAEZC,EAFY,KAGnB,OAHmB,KAIjB,eAAC,IAAD,CAAWC,KAAK,eAAeC,EAAE,QAAjC,UACE,cAAC,IAAD,CAAQjE,YAAY,OAAOE,QAAS0D,EAApC,kBAGA,eAAC,IAAD,CAAQG,UAAWA,EAAWF,QAASA,EAASF,OAAQA,EAAxD,UACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAcO,kBAAkB,MAAhC,0BACA,eAAC,IAAD,WACE,iDACA,iDACA,0DAIN,eAAC,IAAD,CAAQlD,QAAQ,OAAOC,MAAM,UAAUgD,EAAE,QAAzC,UACE,cAAC,IAAD,CAAK/C,EAAE,MAAMC,GAAG,GAAG3B,EAAE,OAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKG,KAAK,IAAIwB,GAAG,QAAQ3B,EAAE,gBC9BpB2E,MARf,WACE,OACE,qBAAKrF,UAAU,MAAf,SACE,cAAC,EAAD,OCANsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.82a173cb.chunk.js","sourcesContent":["import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Select,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { FieldHookConfig, useField } from \"formik\";\r\n\r\ninterface OtherProps {\r\n  label: string;\r\n}\r\n\r\ntype Props = {\r\n  label: string;\r\n  props: FieldHookConfig<any>;\r\n};\r\n\r\nexport const CInput = (props: OtherProps & FieldHookConfig<string>) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  return (\r\n    <>\r\n      <FormControl id=\"fullname\">\r\n        <FormLabel>{props.label}</FormLabel>\r\n        <Input {...field} type={props.type} />\r\n      </FormControl>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CTextArea = (props: OtherProps & FieldHookConfig<string>) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  return (\r\n    <>\r\n      <FormControl id=\"fullname\">\r\n        <FormLabel>{props.label}</FormLabel>\r\n        <Textarea {...field} type={props.type} />\r\n      </FormControl>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CSelect = (props: OtherProps & FieldHookConfig<string>) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  return (\r\n    <>\r\n      <FormControl id=\"fullname\">\r\n        <FormLabel>{props.label}</FormLabel>\r\n\r\n        <Select placeholder=\"Select option\" {...field} type={props.type}>\r\n          {props.children}\r\n        </Select>\r\n      </FormControl>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Flex, Box, Button } from \"@chakra-ui/react\";\r\nimport { workExp } from \"../interfaces/forminterfaces\";\r\nimport { CInput } from \"./customprimitives\";\r\n\r\nimport { ISkill } from \"../interfaces/forminterfaces\";\r\nimport { FieldArray } from \"formik\";\r\n\r\ninterface skillsProps {\r\n  values: ISkill[];\r\n  handleChange: any;\r\n}\r\nconst SkillsForm: React.FC<{\r\n  skill: ISkill;\r\n  handleChange: any;\r\n  index: number;\r\n  removeFn: any;\r\n}> = ({ skill, handleChange, index, removeFn }) => {\r\n  return (\r\n    <Flex p=\"2\" marginBottom=\"2\" border=\"1px solid #ccc\">\r\n      <Box flex=\"1\">\r\n        <CInput\r\n          name={`skills.${index}.skill`}\r\n          type=\"text\"\r\n          placeholder=\"skill name\"\r\n          label=\"Skill\"\r\n        />\r\n        <CInput\r\n          name={`skills.${index}.level`}\r\n          type=\"text\"\r\n          placeholder=\"Level\"\r\n          label=\"Level\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\nconst SkillsArr: React.FC<skillsProps> = ({ values, handleChange }) => {\r\n  return (\r\n    <FieldArray name=\"skills\">\r\n      {(arrayHelpers) => {\r\n        return (\r\n          <div>\r\n            <Button\r\n              type=\"button\"\r\n              colorScheme=\"pink\"\r\n              variant=\"solid\"\r\n              onClick={() =>\r\n                arrayHelpers.push({\r\n                  skill: \"\",\r\n                  level: 1,\r\n                })\r\n              }\r\n            >\r\n              Add work-ex\r\n            </Button>\r\n\r\n            {values.map((skill, index) => (\r\n              <SkillsForm\r\n                key={index}\r\n                skill={skill}\r\n                handleChange={handleChange}\r\n                index={index}\r\n                removeFn={arrayHelpers.remove}\r\n              />\r\n            ))}\r\n          </div>\r\n        );\r\n      }}\r\n    </FieldArray>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkillsArr);\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  HStack,\r\n  Input,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { FieldArray, Field } from \"formik\";\r\nimport { workExp } from \"../interfaces/forminterfaces\";\r\nimport { CInput, CSelect, CTextArea } from \"./customprimitives\";\r\n\r\ninterface workExProps {\r\n  values: workExp[];\r\n  handleChange: any;\r\n}\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst WorkExForm: React.FC<{\r\n  workEx: workExp;\r\n  handleChange: any;\r\n  index: number;\r\n  removeFn: any;\r\n}> = ({ workEx, handleChange, index, removeFn }) => {\r\n  return (\r\n    <>\r\n      <AccordionItem>\r\n        <h2>\r\n          <AccordionButton>\r\n            <Box flex=\"1\" textAlign=\"left\">\r\n              {workEx.company} - {workEx.toYear}\r\n            </Box>\r\n            <AccordionIcon />\r\n          </AccordionButton>\r\n        </h2>\r\n        <AccordionPanel pb={4}>\r\n          <Flex p=\"2\" marginBottom=\"2\" border=\"1px solid #ccc\">\r\n            <Box flex=\"1\">\r\n              <CInput\r\n                name={`workExperience.${index}.company`}\r\n                type=\"text\"\r\n                placeholder=\"compname\"\r\n                label=\"Company\"\r\n              />\r\n              <CInput\r\n                name={`workExperience.${index}.role`}\r\n                type=\"text\"\r\n                placeholder=\"Role\"\r\n                label=\"Role\"\r\n              />\r\n              {/* //From and to Month and year */}\r\n              <HStack spacing=\"36px\">\r\n                <div>\r\n                  <FormLabel>From</FormLabel>\r\n                  <HStack spacing=\"24px\" align=\"stretch\">\r\n                    <Box w=\"50%\" bg=\"\">\r\n                      <FormLabel>Month</FormLabel>\r\n                      <CSelect\r\n                        name={`workExperience.${index}.fromMonth`}\r\n                        type=\"select\"\r\n                        label=\"\"\r\n                      >\r\n                        {months.map((m, i) => (\r\n                          <option key={i} value={m}>\r\n                            {m}\r\n                          </option>\r\n                        ))}\r\n                      </CSelect>\r\n                    </Box>\r\n                    <Box w=\"50%\" bg=\"\">\r\n                      <CInput\r\n                        name={`workExperience.${index}.fromYear`}\r\n                        type=\"text\"\r\n                        placeholder=\"Year\"\r\n                        label=\"Year\"\r\n                      />\r\n                    </Box>\r\n                  </HStack>\r\n                </div>\r\n                <div>\r\n                  <FormLabel>To</FormLabel>\r\n                  <HStack spacing=\"24px\" align=\"stretch\">\r\n                    <Box w=\"50%\" bg=\"\">\r\n                      <FormLabel>Month</FormLabel>\r\n                      <CSelect\r\n                        name={`workExperience.${index}.toMonth`}\r\n                        type=\"select\"\r\n                        label=\"\"\r\n                      >\r\n                        {months.map((m, i) => (\r\n                          <option key={i} value={m}>\r\n                            {m}\r\n                          </option>\r\n                        ))}\r\n                      </CSelect>\r\n                    </Box>\r\n                    <Box w=\"50%\" bg=\"\">\r\n                      <CInput\r\n                        name={`workExperience.${index}.toYear`}\r\n                        type=\"text\"\r\n                        placeholder=\"Year\"\r\n                        label=\"Year\"\r\n                      />\r\n                    </Box>\r\n                  </HStack>\r\n                </div>\r\n              </HStack>\r\n              <CTextArea\r\n                name={`workExperience.${index}.jobdescription`}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n                label=\"About role\"\r\n              />\r\n            </Box>\r\n            <button onClick={() => removeFn(index)}>X</button>\r\n          </Flex>\r\n        </AccordionPanel>\r\n      </AccordionItem>\r\n    </>\r\n  );\r\n};\r\n\r\nconst WorkExArr: React.FC<workExProps> = ({ values, handleChange }) => {\r\n  return (\r\n    <FieldArray name=\"workExperience\">\r\n      {(arrayHelpers) => (\r\n        <div>\r\n          <Button\r\n            type=\"button\"\r\n            colorScheme=\"pink\"\r\n            variant=\"solid\"\r\n            onClick={() =>\r\n              arrayHelpers.push({\r\n                company: \"\",\r\n                fromYear: \"\",\r\n                toYear: \"\",\r\n                role: \"\",\r\n              })\r\n            }\r\n          >\r\n            Add work-ex\r\n          </Button>\r\n          {values.map((workEx, index) => (\r\n            <WorkExForm\r\n              key={index}\r\n              workEx={workEx}\r\n              handleChange={handleChange}\r\n              index={index}\r\n              removeFn={arrayHelpers.remove}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FieldArray>\r\n  );\r\n};\r\n\r\nexport default React.memo(WorkExArr);\r\n","import {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { Field, FieldArray, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport SkillsArr from \"./skillsform\";\r\nimport WorkExArr from \"./workExForm\";\r\n\r\nconst DisplayFormikState = (props: any) => (\r\n  <div style={{ margin: \"1rem 0\" }}>\r\n    <h3 style={{ fontFamily: \"monospace\" }} />\r\n    <pre\r\n      style={{\r\n        background: \"#f6f8fa\",\r\n        fontSize: \".65rem\",\r\n        padding: \".5rem\",\r\n      }}\r\n    >\r\n      <strong>props</strong> = {JSON.stringify(props, null, 2)}\r\n    </pre>\r\n  </div>\r\n);\r\n\r\nconst ProfileForm: React.FC = () => {\r\n  return (\r\n    <Box>\r\n      <Accordion allowToggle allowMultiple>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"Siva\",\r\n            about: \"\",\r\n            workExperience: [\r\n              {\r\n                company: \"ibm\",\r\n                fromMonth: \"\",\r\n                fromYear: 2004,\r\n                toMonth: \"\",\r\n                toYear: 2007,\r\n                role: \"sse\",\r\n                jobdescription: \"\",\r\n              },\r\n            ],\r\n            skills: [\r\n              {\r\n                name: \"JavaScript\",\r\n                level: 3,\r\n              },\r\n            ],\r\n          }}\r\n          onSubmit={(values, actions) => console.log(values)}\r\n        >\r\n          {({ values, handleChange, handleBlur, handleSubmit }) => (\r\n            <Form>\r\n              <Box mb=\"12\">\r\n                <AccordionItem border=\"none\">\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      <Heading as=\"h2\" size=\"xl\" isTruncated>\r\n                        About\r\n                      </Heading>\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                  <AccordionPanel pb={4}>\r\n                    <FormControl id=\"fullname\">\r\n                      <FormLabel>Full name</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <FormHelperText>\r\n                        We'll never share your email.\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <FormControl id=\"About\">\r\n                      <FormLabel>About</FormLabel>\r\n                      <Textarea\r\n                        placeholder=\"Here is a sample placeholder\"\r\n                        name=\"about\"\r\n                        value={values.about}\r\n                        onChange={handleChange}\r\n                      />\r\n\r\n                      <FormHelperText>\r\n                        We'll never share your email.\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Box>\r\n\r\n              {/* Work ex section */}\r\n              <Box mb=\"12\">\r\n                <AccordionItem border=\"none\">\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        <Heading as=\"h2\" size=\"xl\" isTruncated>\r\n                          Work Experience\r\n                        </Heading>\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    <Heading size=\"md\">Work experience</Heading>\r\n                    <Accordion allowToggle>\r\n                      <WorkExArr\r\n                        values={values.workExperience}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </Accordion>\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Box>\r\n              {/* Skills section */}\r\n              <Box mb=\"12\">\r\n                <AccordionItem border=\"none\">\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        <Heading as=\"h2\" size=\"xl\" isTruncated>\r\n                          Skills\r\n                        </Heading>\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel py={8}>\r\n                    <Heading size=\"md\">Work experience</Heading>\r\n                    <Accordion allowToggle>\r\n                      <SkillsArr\r\n                        values={values.skills}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </Accordion>\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Box>\r\n              {/* Contact section */}\r\n              <Box mb=\"12\">\r\n                <AccordionItem border=\"none\">\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        <Heading as=\"h2\" size=\"xl\" isTruncated>\r\n                          Contact\r\n                        </Heading>\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    <Heading size=\"md\">Work experience</Heading>\r\n                    <Accordion allowToggle>\r\n                      <WorkExArr\r\n                        values={values.workExperience}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </Accordion>\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Box>\r\n\r\n              <DisplayFormikState values={values} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProfileForm);\r\n","import {\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  Box,\r\n  Container,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  useDisclosure,\r\n  SlideDirection,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport ProfileForm from \"./profileform\";\r\n\r\nfunction Dashboard() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [placement, setPlacement] = useState<SlideDirection>(\"left\");\r\n  return (\r\n    <Container maxW=\"container.xl\" h=\"100vh\">\r\n      <Button colorScheme=\"blue\" onClick={onOpen}>\r\n        Open\r\n      </Button>\r\n      <Drawer placement={placement} onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Basic Drawer</DrawerHeader>\r\n          <DrawerBody>\r\n            <p>Some contents...</p>\r\n            <p>Some contents...</p>\r\n            <p>Some contents...</p>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n      <HStack spacing=\"24px\" align=\"stretch\" h=\"100vh\">\r\n        <Box w=\"50%\" bg=\"\" p=\"2rem\">\r\n          <ProfileForm />\r\n        </Box>\r\n        <Box flex=\"1\" bg=\"white\" p=\"2rem\"></Box>\r\n      </HStack>\r\n    </Container>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import { Heading } from \"@chakra-ui/react\";\nimport Dashboard from \"./components/dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}